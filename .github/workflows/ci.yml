name: Docker Image CI

on:
  push:
    branches: ["dev"]
    tags: ["release_*"]
  pull_request:
    branches: ["dev"]
  workflow_dispatch:
    inputs:
      ref:
        description: "ref to build(refs/tags/xxx for tag or refs/heads/xxx for branch)"
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Extract image tag
        id: extract_image_tag
        run: |
          echo "start extract_image_tag"
          echo "github.event_name=${{ github.event_name }}"
          ref=""
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then  
            echo "match workflow_dispatch with ref=${{ github.event.inputs.ref }}"
            ref="${{ github.event.inputs.ref }}"
          else
            echo "match ${{ github.event_name }} ${GITHUB_REF}"
            ref="${GITHUB_REF}"
          fi
          echo "ref=$ref"
          image_tag=""
          if [[ $ref == refs/tags/* ]]; then
            image_tag="${GITHUB_REF/refs\/tags\/}"
          elif [[ $ref == refs/heads/* ]]; then  
            image_tag="${GITHUB_REF/refs\/heads\/}_$(date +'%Y%m%d%H%M%S')"
          fi
          echo "image_tag=$image_tag"
          echo "image_tag=$image_tag" >> "$GITHUB_OUTPUT"
          if [[ $image_tag == release_* ]]; then  
            echo "is_release=true" >> "$GITHUB_OUTPUT"
          else  
            echo "is_release=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Test all packages
        run: npm i &&npm test

      - name: Build all Docker images
        if: success()
        shell: pwsh
        run: ./build_all.ps1

      - name: Set up Docker Buildx
        if: success()
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: success()
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image for API
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: ./apps/api
          push: true
          tags: |
            sapia/api:${{ steps.extract_image_tag.outputs.image_tag }}
            ${{ steps.extract_image_tag.outputs.is_release == 'true' && 'sapia/api:latest' || '' }}

      - name: Build and push Docker image for APP
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: ./apps/app
          push: true
          tags: |
            sapia/app:${{ steps.extract_image_tag.outputs.image_tag}}
            ${{ steps.extract_image_tag.outputs.is_release == 'true' && 'sapia/app:latest' || '' }}

      - name: Trigger dev deployment
        if: success() && github.ref == 'refs/heads/dev'
        run: |
          curl -XPOST -u "USERNAME:${{ secrets.GITHUB_TOKEN }}" \  
          -H "Accept: application/vnd.github.v3+json" \  
          https://api.github.com/repos/${{ github.repository_owner }}/${{ github.repository }}/actions/workflows/78856595/dispatches \  
          --data '{"ref":"dev", "inputs":{"environment":"dev", "image_tag":"${{ steps.extract_image_tag.outputs.image_tag }}"}}'}}'
