name: Docker Image CD

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "environment to deploy"
        required: true
        default: "dev"
      image_tag:
        description: "build to deploy"
        required: true
        default: "latest"

jobs:
  deploy_dev:
    runs-on: ubuntu-latest
    if: github.event.inputs.image_tag && github.event.inputs.environment =='dev'
    environment: dev
    steps:
      - run: |
          echo "deploy build:${{github.event.inputs.image_tag}} to dev environment"
      - name: Deploy to Dev
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker login ghcr.io -u ${{ github.repository_owner }} -p ${{ secrets.GITHUB_TOKEN }}
            docker pull ghcr.io/${{ github.repository_owner }}/challenge/api:${{ github.event.inputs.image_tag }}
            docker pull ghcr.io/${{ github.repository_owner }}/challenge/app:${{ github.event.inputs.image_tag }}
            docker run -d --name api -p 3000:3000 ghcr.io/${{ github.repository_owner }}/challenge/api:${{ github.event.inputs.image_tag }}
            docker run -d --name app -p 4000:4000 ghcr.io/${{ github.repository_owner }}/challenge/app:${{ github.event.inputs.image_tag }}
            docker run -d --name scheduler ghcr.io/${{ github.repository_owner }}/challenge/scheduler:${{ github.event.inputs.image_tag }}

  deploy_prod:
    runs-on: ubuntu-latest
    if: github.event.inputs.image_tag && github.event.inputs.environment =='prod' && startsWith(github.event.inputs.image_tag,'release')
    environment: prod
    steps:
      - run: |
          echo "deploy build:${{github.event.inputs.image_tag}} to prod environment"
      - name: Deploy to Prod
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker login ghcr.io -u ${{ github.repository_owner }} -p ${{ secrets.GITHUB_TOKEN }}
            docker pull ghcr.io/${{ github.repository_owner }}/challenge/api:${{ github.event.inputs.image_tag }}
            docker pull ghcr.io/${{ github.repository_owner }}/challenge/app:${{ github.event.inputs.image_tag }}
            docker run -d --name api -p 3000:3000 ghcr.io/${{ github.repository_owner }}/challenge/api:${{ github.event.inputs.image_tag }}
            docker run -d --name app -p 4000:4000 ghcr.io/${{ github.repository_owner }}/challenge/app:${{ github.event.inputs.image_tag }}
            docker run -d --name scheduler ghcr.io/${{ github.repository_owner }}/challenge/scheduler:${{ github.event.inputs.image_tag }}
